{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Documents\\\\REACT\\\\07\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 1\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 2\n  }, this);\n};\n\n_s(AllQuotes, \"55QWQz4Hyb0YGo2DDkJH0P/Qt60=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/singh/Documents/REACT/07/09-time-to-practice-starting-code/src/pages/AllQuotes.js"],"names":["useEffect","QuoteList","LoadingSpinner","useHttp","getAllQuotes","NoQuotesFound","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AACA,MAAMC,SAAS,GAAC,MAAI;AAAA;;AACpB,QAAM;AAACC,IAAAA,WAAD;AAAaC,IAAAA,MAAb;AAAoBC,IAAAA,IAAI,EAACC,YAAzB;AAAsCC,IAAAA;AAAtC,MAA6CR,OAAO,CAACC,YAAD,EAAc,IAAd,CAA1D;AACAJ,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,WAAW;AACZ,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;AAIA,MAAGC,MAAM,KAAG,SAAZ,EAAsB;AACpB,wBACF;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADE;AAKD;;AACD,MAAGG,KAAH,EAAS;AACP,wBACE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,MAAGH,MAAM,KAAG,WAAT,KAAuB,CAACE,YAAD,IAAeA,YAAY,CAACE,MAAb,KAAsB,CAA5D,CAAH,EAAkE;AAChE,wBACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACC,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,UADD;AAGC,CA3BD;;GAAMJ,S;UAC6CH,O;;;KAD7CG,S;AA4BN,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\"\r\nimport QuoteList from \"../components/quotes/QuoteList\"\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"\r\nimport useHttp from \"../hooks/use-http\"\r\nimport { getAllQuotes } from \"../lib/api\"\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\"\r\nconst AllQuotes=()=>{\r\nconst {sendRequest,status,data:loadedQuotes,error}=useHttp(getAllQuotes,true)\r\nuseEffect(()=>{\r\n  sendRequest()\r\n},[sendRequest])\r\n\r\nif(status===\"pending\"){ \r\n  return(\r\n<div className=\"centered\">\r\n    <LoadingSpinner/>\r\n  </div>\r\n  )\r\n}\r\nif(error){\r\n  return(\r\n    <p className=\"centered focused\" >{error}</p>\r\n  )\r\n}\r\nif(status===\"completed\"&&(!loadedQuotes||loadedQuotes.length===0)){\r\n  return(\r\n    <NoQuotesFound/>\r\n  )\r\n}\r\n\r\nreturn(\r\n <QuoteList quotes={loadedQuotes}/>\r\n)\r\n}\r\nexport default AllQuotes"]},"metadata":{},"sourceType":"module"}