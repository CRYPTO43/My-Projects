{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Documents\\\\REACT\\\\07\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment, useEffect } from \"react/cjs/react.production.min\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.url}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"Y73BT5JN6McnSuOc0948JIgxiMQ=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["C:/Users/singh/Documents/REACT/07/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"names":["useParams","Route","Link","useRouteMatch","Fragment","useEffect","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetails","params","match","quoteId","sendRequest","status","data","loadedQuote","error","text","author","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,KAAnB,EAA0BC,IAA1B,EAA+BC,aAA/B,QAAoD,kBAApD;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,gCAAnC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,MAAMC,YAAY,GAAC,MAAI;AAAA;;AACrB,QAAMC,MAAM,GAACZ,SAAS,EAAtB;AACA,QAAMa,KAAK,GAACV,aAAa,EAAzB;AACA,QAAM;AAACW,IAAAA;AAAD,MAAUF,MAAhB;AAEA,QAAK;AAACG,IAAAA,WAAD;AAAaC,IAAAA,MAAb;AAAoBC,IAAAA,IAAI,EAACC,WAAzB;AAAqCC,IAAAA;AAArC,MAA4CV,OAAO,CAACC,cAAD,EAAgB,IAAhB,CAAxD;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEP,CAACC,WAAD,EAAaD,OAAb,CAFO,CAAT;;AAIA,MAAGE,MAAM,KAAG,SAAZ,EAAsB;AACpB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAGG,KAAH,EAAS;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,MAAG,CAACD,WAAW,CAACE,IAAhB,EAAqB;AACnB,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACA,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEF,WAAW,CAACE,IAApC;AAA0C,MAAA,MAAM,EAAEF,WAAW,CAACG;AAA9D;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUT,MAAM,CAACE,OAAQ,EAAvC;AAA0C,MAAA,KAAK,MAA/C;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAED,KAAK,CAACS,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eASA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAET,KAAK,CAACS,GAAI,WAA1B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3CD;;GAAMX,Y;UACSX,S,EACDG,a,EAGqCM,O;;;KAL7CE,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import { useParams,Route, Link,useRouteMatch } from \"react-router-dom\"\r\nimport { Fragment,useEffect } from \"react/cjs/react.production.min\"\r\nimport Comments from \"../components/comments/Comments\"\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\"\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\"\r\nimport useHttp from \"../hooks/use-http\"\r\nimport { getSingleQuote } from \"../lib/api\"\r\n\r\nconst QuoteDetails=()=>{\r\n  const params=useParams()\r\n  const match=useRouteMatch()\r\n  const {quoteId}=params\r\n\r\n  const{sendRequest,status,data:loadedQuote,error}=useHttp(getSingleQuote,true)\r\n\r\n  useEffect(()=>{\r\n    sendRequest(quoteId)\r\n  },[sendRequest,quoteId])\r\n\r\n  if(status===\"pending\"){\r\n    return(\r\n      <div className=\"centered\">\r\n        <LoadingSpinner/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(error){\r\n    return(\r\n      <div className=\"centered\">{error}</div>\r\n    )\r\n  }\r\n\r\n  if(!loadedQuote.text){\r\n    return<p>No Quote found</p>\r\n  }\r\n  return(\r\n    <Fragment>\r\n    <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\r\n    <Route path={`/quotes/${params.quoteId}`} exact>\r\n    <div className='centered'>\r\n      <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n       Load Comments\r\n      </Link>\r\n    </div>\r\n    </Route>\r\n    <Route path={`${match.url}/comments`}>\r\n      <Comments/>\r\n    </Route>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default QuoteDetails"]},"metadata":{},"sourceType":"module"}