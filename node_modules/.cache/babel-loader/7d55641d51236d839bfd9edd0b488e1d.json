{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Documents\\\\REACT\\\\07\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from \"../comments/CommentsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {\n    let comments;\n\n    if (status === 'pending') {\n      comments = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n      comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n        comments: loadedComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this);\n    }\n\n    if (status === \"completed\" && (!loadedComments || loadedComments.length === 0)) {\n      comments = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"centered\",\n        children: \"No comments are Added yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"YAwGrK9LTOGivse7qzf6rmOlNA0=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/singh/Documents/REACT/07/09-time-to-practice-starting-code/src/components/comments/Comments.js"],"names":["useState","useEffect","useParams","useHttp","getAllComments","LoadingSpinner","classes","NewCommentForm","CommentsList","Comments","isAddingComment","setIsAddingComment","params","quoteId","sendRequest","status","data","loadedComments","startAddCommentHandler","addedCommentHandler","comments","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMY,MAAM,GAACV,SAAS,EAAtB;AACF,QAAM;AAACW,IAAAA;AAAD,MAAUD,MAAhB;AACC,QAAM;AAACE,IAAAA,WAAD;AAAaC,IAAAA,MAAb;AAAoBC,IAAAA,IAAI,EAACC;AAAzB,MAA0Cd,OAAO,CAACC,cAAD,CAAvD;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEP,CAACA,OAAD,EAASC,WAAT,CAFO,CAAT;;AAIC,QAAMI,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,QAAMQ,mBAAmB,GAAC,MAAI;AAC5B,QAAIC,QAAJ;;AACA,QAAGL,MAAM,KAAG,SAAZ,EAAsB;AACpBK,MAAAA,QAAQ,gBACN;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AACD,QAAGL,MAAM,KAAG,WAAT,IAAsBE,cAAtB,IAAsCA,cAAc,CAACI,MAAf,GAAuB,CAAhE,EAAkE;AAChED,MAAAA,QAAQ,gBAAC,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAT;AACD;;AACD,QAAGF,MAAM,KAAG,WAAT,KAAuB,CAACE,cAAD,IAAiBA,cAAc,CAACI,MAAf,KAAwB,CAAhE,CAAH,EAAsE;AACpED,MAAAA,QAAQ,gBAAC;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACD;AACF,GAfD;;AAgBA,sBACE;AAAS,IAAA,SAAS,EAAEd,OAAO,CAACc,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,MAAM,CAACC,OAAhC;AAAyC,MAAA,cAAc,EAAEM;AAAzD;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzCD;;GAAMV,Q;UAESP,S,EAEkCC,O;;;KAJ3CM,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import { useState,useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from \"../comments/CommentsList\"\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params=useParams()\nconst {quoteId}=params\n const {sendRequest,status,data:loadedComments}= useHttp(getAllComments)\n\n useEffect(()=>{\n   sendRequest(quoteId)\n },[quoteId,sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler=()=>{\n    let comments\n    if(status==='pending'){\n      comments=(\n        <div className='centered'>\n          <LoadingSpinner/>\n        </div>\n      )\n    }\n    if(status==='completed'&&loadedComments&&loadedComments.length >0){\n      comments=<CommentsList comments={loadedComments}/>\n    }\n    if(status===\"completed\"&&(!loadedComments||loadedComments.length===0)){\n      comments=<p className='centered'>No comments are Added yet</p>\n    }\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler}/>}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}