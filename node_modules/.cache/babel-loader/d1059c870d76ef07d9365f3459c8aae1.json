{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Documents\\\\REACT\\\\07\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isEntering,\n      message: location => \"I know you don't want to leave.Do you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: formFocusHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: authorInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: finishEnteringHandler,\n            className: \"btn\",\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"sdZINOr/RkBs9xjnVp9iLf7UARc=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["C:/Users/singh/Documents/REACT/07/09-time-to-practice-starting-code/src/components/quotes/QuoteForm.js"],"names":["React","useRef","useState","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","isEntering","setIsEntering","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","formFocusHandler","finishEnteringHandler","location","form","isLoading","loading","control","actions"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering,setIsEntering]=useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const formFocusHandler=()=>{\n  setIsEntering(true)\n  }\n  const finishEnteringHandler=()=>{\n    setIsEntering(false)\n  }\n  return (\n    <React.Fragment>\n      <Prompt when={isEntering} message={(location)=>\"I know you don't want to leave.Do you?\"}/>\n    <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}