{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Documents\\\\REACT\\\\07\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning is Fun\"\n}, {\n  id: \"q2\",\n  author: \"Arshjot\",\n  text: \"Yup it is intresting\"\n}];\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.url}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetails, \"Z/bFVfTt127x9UIB6x9JiYH3soU=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["C:/Users/singh/Documents/REACT/07/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"names":["useParams","Route","Link","useRouteMatch","Fragment","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetails","params","match","quote","find","quoteId","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAmBC,KAAnB,EAA0BC,IAA1B,EAA+BC,aAA/B,QAAoD,kBAApD;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AACA,MAAMC,YAAY,GAAC,CACjB;AAACC,EAAAA,EAAE,EAAC,IAAJ;AAASC,EAAAA,MAAM,EAAC,KAAhB;AAAsBC,EAAAA,IAAI,EAAC;AAA3B,CADiB,EAEjB;AAACF,EAAAA,EAAE,EAAC,IAAJ;AAASC,EAAAA,MAAM,EAAC,SAAhB;AAA0BC,EAAAA,IAAI,EAAC;AAA/B,CAFiB,CAAnB;;AAIA,MAAMC,YAAY,GAAC,MAAI;AAAA;;AACrB,QAAMC,MAAM,GAACZ,SAAS,EAAtB;AACA,QAAMa,KAAK,GAACV,aAAa,EAAzB;AACA,QAAMW,KAAK,GAACP,YAAY,CAACQ,IAAb,CAAkBD,KAAK,IAAEA,KAAK,CAACN,EAAN,KAAWI,MAAM,CAACI,OAA3C,CAAZ;;AACA,MAAG,CAACF,KAAJ,EAAU;AACR,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACA,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA9B;AAAoC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUG,MAAM,CAACI,OAAQ,EAAvC;AAA0C,MAAA,KAAK,MAA/C;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEH,KAAK,CAACI,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFA,eASA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEJ,KAAK,CAACI,GAAI,WAA1B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAtBD;;GAAMN,Y;UACSX,S,EACDG,a;;;KAFRQ,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import { useParams,Route, Link,useRouteMatch } from \"react-router-dom\"\r\nimport { Fragment } from \"react/cjs/react.production.min\"\r\nimport Comments from \"../components/comments/Comments\"\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\"\r\nconst DUMMY_QUOTES=[\r\n  {id:\"q1\",author:\"Max\",text:\"Learning is Fun\"},\r\n  {id:\"q2\",author:\"Arshjot\",text:\"Yup it is intresting\"}\r\n]\r\nconst QuoteDetails=()=>{\r\n  const params=useParams()\r\n  const match=useRouteMatch()\r\n  const quote=DUMMY_QUOTES.find(quote=>quote.id===params.quoteId)\r\n  if(!quote){\r\n    return<p>No Quote found</p>\r\n  }\r\n  return(\r\n    <Fragment>\r\n    <HighlightedQuote text={quote.text} author={quote.author}/>\r\n    <Route path={`/quotes/${params.quoteId}`} exact>\r\n    <div className='centered'>\r\n      <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n       Load Comments\r\n      </Link>\r\n    </div>\r\n    </Route>\r\n    <Route path={`${match.url}/comments`}>\r\n      <Comments/>\r\n    </Route>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default QuoteDetails"]},"metadata":{},"sourceType":"module"}